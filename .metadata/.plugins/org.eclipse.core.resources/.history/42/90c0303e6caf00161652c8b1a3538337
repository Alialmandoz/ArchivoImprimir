package gestion.Ui;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JTabbedPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import gestion.dao.ClienteDao;
import javax.swing.JLabel;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.JScrollPane;

public class UI {

	private ClienteDao cliente = new ClienteDao();
	private JFrame frame;
	private JTextField txtNombre;
	private JTextField txtApellido;
	private JTextField txtEmail;
	private JTextField txttelefono;
	private JLabel lblApellido;
	private JLabel lblEmail;
	private JLabel lblTelefono;
	private ModeloCliente modeloCrear = new ModeloCliente();
	private ModeloCliente modeloBorrar = new ModeloCliente();
	private JTable tablaAgregar;
	private JTextField txtBorrarNombre;
	private JTextField txtBorrarApellido;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				try {
					UI window = new UI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public UI() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 657, 600);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);

		JTabbedPane tabbedPane = new JTabbedPane(SwingConstants.TOP);
		tabbedPane.setBounds(0, 0, 784, 561);
		frame.getContentPane().add(tabbedPane);

		
		
		
		
		
		
		
		
		
		
		

		JPanel borrarCliente = new JPanel();
		tabbedPane.addTab("Borrar Cliente", null, borrarCliente, "atencion no se puede deshacer");
		borrarCliente.setLayout(null);

		txtBorrarNombre = new JTextField();
		txtBorrarNombre.setBounds(91, 12, 186, 20);
		borrarCliente.add(txtBorrarNombre);
		txtBorrarNombre.setColumns(10);

		txtBorrarApellido = new JTextField();
		txtBorrarApellido.setBounds(91, 43, 186, 20);
		borrarCliente.add(txtBorrarApellido);
		txtBorrarApellido.setColumns(10);

		JLabel lblNombre_1 = new JLabel("Nombre");
		lblNombre_1.setBounds(27, 15, 46, 14);
		borrarCliente.add(lblNombre_1);

		JLabel lblApellido_1 = new JLabel("Apellido");
		lblApellido_1.setBounds(27, 46, 46, 14);
		borrarCliente.add(lblApellido_1);

		JTable tablaBorrar = new JTable(modeloBorrar.tableModel);
		modeloBorrar.cargarCliente(txtBorrarNombre.getText(), txtBorrarApellido.getText());
		JScrollPane scrollPane2 = new JScrollPane(tablaBorrar);
		scrollPane2.setBounds(49, 170, 553, 352);
		scrollPane2.getVerticalScrollBar();
		borrarCliente.add(scrollPane2);

		tablaBorrar.getModel().addTableModelListener(new TableModelListener() {

			@Override
			public void tableChanged(TableModelEvent e) {
				System.out.println("tabla cambiada");
				modeloCrear.cargar();
				tablaAgregar.setModel(modeloCrear.tableModel);

			}
		});
		
		JButton btnBorrar = new JButton("Buscar");
		btnBorrar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				

			}
		});
		btnBorrar.setBounds(327, 11, 89, 23);
		borrarCliente.add(btnBorrar);

		JButton btnCancelar_1 = new JButton("Cancelar");
		btnCancelar_1.setBounds(327, 42, 89, 23);
		borrarCliente.add(btnCancelar_1);

		
		
		
		
		
		
		
		
		
		
		JPanel crearOrden = new JPanel();
		tabbedPane.addTab("Crear Orden de trabajo", null, crearOrden, null);

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		modeloCrear.cargar();
		JPanel cargaCliente = new JPanel();
		tabbedPane.addTab("Cargar Nuevo Cliente", null, cargaCliente, "Aqui cargas nuevos clientes a la base de datos");
		cargaCliente.setLayout(null);

		txtNombre = new JTextField();
		txtNombre.setBounds(105, 11, 374, 20);
		cargaCliente.add(txtNombre);
		txtNombre.setColumns(10);

		txtApellido = new JTextField();
		txtApellido.setBounds(105, 42, 374, 20);
		txtApellido.setColumns(10);
		cargaCliente.add(txtApellido);

		txtEmail = new JTextField();
		txtEmail.setBounds(105, 76, 374, 20);
		txtEmail.setColumns(10);
		cargaCliente.add(txtEmail);

		txttelefono = new JTextField();
		txttelefono.setBounds(105, 107, 374, 20);
		txttelefono.setColumns(10);
		cargaCliente.add(txttelefono);

		JLabel lblNombre = new JLabel("Nombre");
		lblNombre.setBounds(49, 17, 46, 14);
		cargaCliente.add(lblNombre);

		lblApellido = new JLabel("Apellido");
		lblApellido.setBounds(49, 48, 46, 14);
		cargaCliente.add(lblApellido);

		lblEmail = new JLabel("Email");
		lblEmail.setBounds(49, 82, 46, 14);
		cargaCliente.add(lblEmail);
		lblTelefono = new JLabel("Telefono");
		lblTelefono.setBounds(49, 113, 46, 14);
		cargaCliente.add(lblTelefono);

		JButton btnAceptar = new JButton("Aceptar");
		btnAceptar.setBounds(513, 10, 89, 23);
		btnAceptar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {

				cliente.crearCliente(txtNombre.getText(), txtApellido.getText(), txtEmail.getText(),
						Long.parseLong(txttelefono.getText()));
				modeloCrear.tableModel.fireTableChanged(new TableModelEvent(modeloCrear.tableModel));
				vaciarCampo(txtApellido);
				vaciarCampo(txtEmail);
				vaciarCampo(txtNombre);
				vaciarCampo(txttelefono);

			}
		});
		cargaCliente.add(btnAceptar);

		JButton btnCancelar = new JButton("Cancelar");
		btnCancelar.setBounds(513, 41, 89, 23);
		cargaCliente.add(btnCancelar);
		tablaAgregar = new JTable(modeloCrear.tableModel);
		JScrollPane scrollPane = new JScrollPane(tablaAgregar);
		scrollPane.setBounds(49, 170, 553, 352);
		scrollPane.getVerticalScrollBar();
		cargaCliente.add(scrollPane);

		tablaAgregar.getModel().addTableModelListener(new TableModelListener() {

			@Override
			public void tableChanged(TableModelEvent e) {
				System.out.println("tabla cambiada");
				modeloCrear.cargar();
				tablaAgregar.setModel(modeloCrear.tableModel);

			}
		});

	}

	private void vaciarCampo(JTextField campo) {
		campo.setText("");
	}
}
