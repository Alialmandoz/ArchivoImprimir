package gestion.Ui;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JTextField;

import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;

public class Tabla extends JPanel {

	private BindingGroup m_bindingGroup;
	private javax.swing.JTable jTable = new javax.swing.JTable();
	private JTextField UIClassIDJTextField;
	private JCheckBox autoCreateColumnsFromModelJCheckBox;
	private JCheckBox autoCreateRowSorterJCheckBox;
	private JSlider autoResizeModeJSlider;
	private JCheckBox autoscrollsJCheckBox;
	private JCheckBox cellSelectionEnabledJCheckBox;
	private JSlider columnCountJSlider;
	private JCheckBox columnSelectionAllowedJCheckBox;
	private JSlider componentCountJSlider;
	private JSlider debugGraphicsOptionsJSlider;
	private JCheckBox doubleBufferedJCheckBox;
	private JCheckBox dragEnabledJCheckBox;
	private JCheckBox editingJCheckBox;
	private JSlider editingColumnJSlider;
	private JSlider editingRowJSlider;
	private JCheckBox enabledJCheckBox;
	private JCheckBox fillsViewportHeightJCheckBox;
	private JCheckBox focusCycleRootJCheckBox;
	private JCheckBox focusTraversalPolicyProviderJCheckBox;
	private JCheckBox focusTraversalPolicySetJCheckBox;
	private JCheckBox focusableJCheckBox;
	private JSlider heightJSlider;
	private JCheckBox inheritsPopupMenuJCheckBox;
	private JCheckBox managingFocusJCheckBox;
	private JTextField nameJTextField;
	private JCheckBox opaqueJCheckBox;
	private JCheckBox optimizedDrawingEnabledJCheckBox;
	private JCheckBox paintingForPrintJCheckBox;
	private JCheckBox paintingTileJCheckBox;
	private JCheckBox requestFocusEnabledJCheckBox;
	private JSlider rowCountJSlider;
	private JSlider rowHeightJSlider;
	private JSlider rowMarginJSlider;
	private JCheckBox rowSelectionAllowedJCheckBox;
	private JCheckBox scrollableTracksViewportHeightJCheckBox;
	private JCheckBox scrollableTracksViewportWidthJCheckBox;
	private JSlider selectedColumnJSlider;
	private JSlider selectedColumnCountJSlider;
	private JSlider selectedRowJSlider;
	private JSlider selectedRowCountJSlider;
	private JSlider selectionModeJSlider;
	private JCheckBox showGridJCheckBox;
	private JCheckBox showHorizontalLinesJCheckBox;
	private JCheckBox showVerticalLinesJCheckBox;
	private JCheckBox surrendersFocusOnKeystrokeJCheckBox;
	private JTextField toolTipTextJTextField;
	private JCheckBox updateSelectionOnSortJCheckBox;
	private JCheckBox validateRootJCheckBox;
	private JCheckBox verifyInputWhenFocusTargetJCheckBox;
	private JCheckBox visibleJCheckBox;
	private JSlider widthJSlider;
	private JSlider xJSlider;
	private JSlider yJSlider;

	public Tabla(javax.swing.JTable newJTable) {
		this();
		setJTable(newJTable);
	}

	public Tabla() {
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[] { 0, 0, 0 };
		gridBagLayout.rowHeights = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		gridBagLayout.columnWeights = new double[] { 0.0, 1.0, 1.0E-4 };
		gridBagLayout.rowWeights = new double[] { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
				0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0E-4 };
		setLayout(gridBagLayout);

		JLabel UIClassIDLabel = new JLabel("UIClassID:");
		GridBagConstraints labelGbc_0 = new GridBagConstraints();
		labelGbc_0.insets = new Insets(5, 5, 5, 5);
		labelGbc_0.gridx = 0;
		labelGbc_0.gridy = 0;
		add(UIClassIDLabel, labelGbc_0);

		UIClassIDJTextField = new JTextField();
		GridBagConstraints componentGbc_0 = new GridBagConstraints();
		componentGbc_0.insets = new Insets(5, 0, 5, 5);
		componentGbc_0.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_0.gridx = 1;
		componentGbc_0.gridy = 0;
		add(UIClassIDJTextField, componentGbc_0);

		JLabel autoCreateColumnsFromModelLabel = new JLabel("AutoCreateColumnsFromModel:");
		GridBagConstraints labelGbc_1 = new GridBagConstraints();
		labelGbc_1.insets = new Insets(5, 5, 5, 5);
		labelGbc_1.gridx = 0;
		labelGbc_1.gridy = 1;
		add(autoCreateColumnsFromModelLabel, labelGbc_1);

		autoCreateColumnsFromModelJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_1 = new GridBagConstraints();
		componentGbc_1.insets = new Insets(5, 0, 5, 5);
		componentGbc_1.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_1.gridx = 1;
		componentGbc_1.gridy = 1;
		add(autoCreateColumnsFromModelJCheckBox, componentGbc_1);

		JLabel autoCreateRowSorterLabel = new JLabel("AutoCreateRowSorter:");
		GridBagConstraints labelGbc_2 = new GridBagConstraints();
		labelGbc_2.insets = new Insets(5, 5, 5, 5);
		labelGbc_2.gridx = 0;
		labelGbc_2.gridy = 2;
		add(autoCreateRowSorterLabel, labelGbc_2);

		autoCreateRowSorterJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_2 = new GridBagConstraints();
		componentGbc_2.insets = new Insets(5, 0, 5, 5);
		componentGbc_2.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_2.gridx = 1;
		componentGbc_2.gridy = 2;
		add(autoCreateRowSorterJCheckBox, componentGbc_2);

		JLabel autoResizeModeLabel = new JLabel("AutoResizeMode:");
		GridBagConstraints labelGbc_3 = new GridBagConstraints();
		labelGbc_3.insets = new Insets(5, 5, 5, 5);
		labelGbc_3.gridx = 0;
		labelGbc_3.gridy = 3;
		add(autoResizeModeLabel, labelGbc_3);

		autoResizeModeJSlider = new JSlider();
		GridBagConstraints componentGbc_3 = new GridBagConstraints();
		componentGbc_3.insets = new Insets(5, 0, 5, 5);
		componentGbc_3.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_3.gridx = 1;
		componentGbc_3.gridy = 3;
		add(autoResizeModeJSlider, componentGbc_3);

		JLabel autoscrollsLabel = new JLabel("Autoscrolls:");
		GridBagConstraints labelGbc_4 = new GridBagConstraints();
		labelGbc_4.insets = new Insets(5, 5, 5, 5);
		labelGbc_4.gridx = 0;
		labelGbc_4.gridy = 4;
		add(autoscrollsLabel, labelGbc_4);

		autoscrollsJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_4 = new GridBagConstraints();
		componentGbc_4.insets = new Insets(5, 0, 5, 5);
		componentGbc_4.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_4.gridx = 1;
		componentGbc_4.gridy = 4;
		add(autoscrollsJCheckBox, componentGbc_4);

		JLabel cellSelectionEnabledLabel = new JLabel("CellSelectionEnabled:");
		GridBagConstraints labelGbc_5 = new GridBagConstraints();
		labelGbc_5.insets = new Insets(5, 5, 5, 5);
		labelGbc_5.gridx = 0;
		labelGbc_5.gridy = 5;
		add(cellSelectionEnabledLabel, labelGbc_5);

		cellSelectionEnabledJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_5 = new GridBagConstraints();
		componentGbc_5.insets = new Insets(5, 0, 5, 5);
		componentGbc_5.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_5.gridx = 1;
		componentGbc_5.gridy = 5;
		add(cellSelectionEnabledJCheckBox, componentGbc_5);

		JLabel columnCountLabel = new JLabel("ColumnCount:");
		GridBagConstraints labelGbc_6 = new GridBagConstraints();
		labelGbc_6.insets = new Insets(5, 5, 5, 5);
		labelGbc_6.gridx = 0;
		labelGbc_6.gridy = 6;
		add(columnCountLabel, labelGbc_6);

		columnCountJSlider = new JSlider();
		GridBagConstraints componentGbc_6 = new GridBagConstraints();
		componentGbc_6.insets = new Insets(5, 0, 5, 5);
		componentGbc_6.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_6.gridx = 1;
		componentGbc_6.gridy = 6;
		add(columnCountJSlider, componentGbc_6);

		JLabel columnSelectionAllowedLabel = new JLabel("ColumnSelectionAllowed:");
		GridBagConstraints labelGbc_7 = new GridBagConstraints();
		labelGbc_7.insets = new Insets(5, 5, 5, 5);
		labelGbc_7.gridx = 0;
		labelGbc_7.gridy = 7;
		add(columnSelectionAllowedLabel, labelGbc_7);

		columnSelectionAllowedJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_7 = new GridBagConstraints();
		componentGbc_7.insets = new Insets(5, 0, 5, 5);
		componentGbc_7.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_7.gridx = 1;
		componentGbc_7.gridy = 7;
		add(columnSelectionAllowedJCheckBox, componentGbc_7);

		JLabel componentCountLabel = new JLabel("ComponentCount:");
		GridBagConstraints labelGbc_8 = new GridBagConstraints();
		labelGbc_8.insets = new Insets(5, 5, 5, 5);
		labelGbc_8.gridx = 0;
		labelGbc_8.gridy = 8;
		add(componentCountLabel, labelGbc_8);

		componentCountJSlider = new JSlider();
		GridBagConstraints componentGbc_8 = new GridBagConstraints();
		componentGbc_8.insets = new Insets(5, 0, 5, 5);
		componentGbc_8.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_8.gridx = 1;
		componentGbc_8.gridy = 8;
		add(componentCountJSlider, componentGbc_8);

		JLabel debugGraphicsOptionsLabel = new JLabel("DebugGraphicsOptions:");
		GridBagConstraints labelGbc_9 = new GridBagConstraints();
		labelGbc_9.insets = new Insets(5, 5, 5, 5);
		labelGbc_9.gridx = 0;
		labelGbc_9.gridy = 9;
		add(debugGraphicsOptionsLabel, labelGbc_9);

		debugGraphicsOptionsJSlider = new JSlider();
		GridBagConstraints componentGbc_9 = new GridBagConstraints();
		componentGbc_9.insets = new Insets(5, 0, 5, 5);
		componentGbc_9.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_9.gridx = 1;
		componentGbc_9.gridy = 9;
		add(debugGraphicsOptionsJSlider, componentGbc_9);

		JLabel doubleBufferedLabel = new JLabel("DoubleBuffered:");
		GridBagConstraints labelGbc_10 = new GridBagConstraints();
		labelGbc_10.insets = new Insets(5, 5, 5, 5);
		labelGbc_10.gridx = 0;
		labelGbc_10.gridy = 10;
		add(doubleBufferedLabel, labelGbc_10);

		doubleBufferedJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_10 = new GridBagConstraints();
		componentGbc_10.insets = new Insets(5, 0, 5, 5);
		componentGbc_10.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_10.gridx = 1;
		componentGbc_10.gridy = 10;
		add(doubleBufferedJCheckBox, componentGbc_10);

		JLabel dragEnabledLabel = new JLabel("DragEnabled:");
		GridBagConstraints labelGbc_11 = new GridBagConstraints();
		labelGbc_11.insets = new Insets(5, 5, 5, 5);
		labelGbc_11.gridx = 0;
		labelGbc_11.gridy = 11;
		add(dragEnabledLabel, labelGbc_11);

		dragEnabledJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_11 = new GridBagConstraints();
		componentGbc_11.insets = new Insets(5, 0, 5, 5);
		componentGbc_11.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_11.gridx = 1;
		componentGbc_11.gridy = 11;
		add(dragEnabledJCheckBox, componentGbc_11);

		JLabel editingLabel = new JLabel("Editing:");
		GridBagConstraints labelGbc_12 = new GridBagConstraints();
		labelGbc_12.insets = new Insets(5, 5, 5, 5);
		labelGbc_12.gridx = 0;
		labelGbc_12.gridy = 12;
		add(editingLabel, labelGbc_12);

		editingJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_12 = new GridBagConstraints();
		componentGbc_12.insets = new Insets(5, 0, 5, 5);
		componentGbc_12.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_12.gridx = 1;
		componentGbc_12.gridy = 12;
		add(editingJCheckBox, componentGbc_12);

		JLabel editingColumnLabel = new JLabel("EditingColumn:");
		GridBagConstraints labelGbc_13 = new GridBagConstraints();
		labelGbc_13.insets = new Insets(5, 5, 5, 5);
		labelGbc_13.gridx = 0;
		labelGbc_13.gridy = 13;
		add(editingColumnLabel, labelGbc_13);

		editingColumnJSlider = new JSlider();
		GridBagConstraints componentGbc_13 = new GridBagConstraints();
		componentGbc_13.insets = new Insets(5, 0, 5, 5);
		componentGbc_13.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_13.gridx = 1;
		componentGbc_13.gridy = 13;
		add(editingColumnJSlider, componentGbc_13);

		JLabel editingRowLabel = new JLabel("EditingRow:");
		GridBagConstraints labelGbc_14 = new GridBagConstraints();
		labelGbc_14.insets = new Insets(5, 5, 5, 5);
		labelGbc_14.gridx = 0;
		labelGbc_14.gridy = 14;
		add(editingRowLabel, labelGbc_14);

		editingRowJSlider = new JSlider();
		GridBagConstraints componentGbc_14 = new GridBagConstraints();
		componentGbc_14.insets = new Insets(5, 0, 5, 5);
		componentGbc_14.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_14.gridx = 1;
		componentGbc_14.gridy = 14;
		add(editingRowJSlider, componentGbc_14);

		JLabel enabledLabel = new JLabel("Enabled:");
		GridBagConstraints labelGbc_15 = new GridBagConstraints();
		labelGbc_15.insets = new Insets(5, 5, 5, 5);
		labelGbc_15.gridx = 0;
		labelGbc_15.gridy = 15;
		add(enabledLabel, labelGbc_15);

		enabledJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_15 = new GridBagConstraints();
		componentGbc_15.insets = new Insets(5, 0, 5, 5);
		componentGbc_15.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_15.gridx = 1;
		componentGbc_15.gridy = 15;
		add(enabledJCheckBox, componentGbc_15);

		JLabel fillsViewportHeightLabel = new JLabel("FillsViewportHeight:");
		GridBagConstraints labelGbc_16 = new GridBagConstraints();
		labelGbc_16.insets = new Insets(5, 5, 5, 5);
		labelGbc_16.gridx = 0;
		labelGbc_16.gridy = 16;
		add(fillsViewportHeightLabel, labelGbc_16);

		fillsViewportHeightJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_16 = new GridBagConstraints();
		componentGbc_16.insets = new Insets(5, 0, 5, 5);
		componentGbc_16.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_16.gridx = 1;
		componentGbc_16.gridy = 16;
		add(fillsViewportHeightJCheckBox, componentGbc_16);

		JLabel focusCycleRootLabel = new JLabel("FocusCycleRoot:");
		GridBagConstraints labelGbc_17 = new GridBagConstraints();
		labelGbc_17.insets = new Insets(5, 5, 5, 5);
		labelGbc_17.gridx = 0;
		labelGbc_17.gridy = 17;
		add(focusCycleRootLabel, labelGbc_17);

		focusCycleRootJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_17 = new GridBagConstraints();
		componentGbc_17.insets = new Insets(5, 0, 5, 5);
		componentGbc_17.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_17.gridx = 1;
		componentGbc_17.gridy = 17;
		add(focusCycleRootJCheckBox, componentGbc_17);

		JLabel focusTraversalPolicyProviderLabel = new JLabel("FocusTraversalPolicyProvider:");
		GridBagConstraints labelGbc_18 = new GridBagConstraints();
		labelGbc_18.insets = new Insets(5, 5, 5, 5);
		labelGbc_18.gridx = 0;
		labelGbc_18.gridy = 18;
		add(focusTraversalPolicyProviderLabel, labelGbc_18);

		focusTraversalPolicyProviderJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_18 = new GridBagConstraints();
		componentGbc_18.insets = new Insets(5, 0, 5, 5);
		componentGbc_18.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_18.gridx = 1;
		componentGbc_18.gridy = 18;
		add(focusTraversalPolicyProviderJCheckBox, componentGbc_18);

		JLabel focusTraversalPolicySetLabel = new JLabel("FocusTraversalPolicySet:");
		GridBagConstraints labelGbc_19 = new GridBagConstraints();
		labelGbc_19.insets = new Insets(5, 5, 5, 5);
		labelGbc_19.gridx = 0;
		labelGbc_19.gridy = 19;
		add(focusTraversalPolicySetLabel, labelGbc_19);

		focusTraversalPolicySetJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_19 = new GridBagConstraints();
		componentGbc_19.insets = new Insets(5, 0, 5, 5);
		componentGbc_19.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_19.gridx = 1;
		componentGbc_19.gridy = 19;
		add(focusTraversalPolicySetJCheckBox, componentGbc_19);

		JLabel focusableLabel = new JLabel("Focusable:");
		GridBagConstraints labelGbc_20 = new GridBagConstraints();
		labelGbc_20.insets = new Insets(5, 5, 5, 5);
		labelGbc_20.gridx = 0;
		labelGbc_20.gridy = 20;
		add(focusableLabel, labelGbc_20);

		focusableJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_20 = new GridBagConstraints();
		componentGbc_20.insets = new Insets(5, 0, 5, 5);
		componentGbc_20.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_20.gridx = 1;
		componentGbc_20.gridy = 20;
		add(focusableJCheckBox, componentGbc_20);

		JLabel heightLabel = new JLabel("Height:");
		GridBagConstraints labelGbc_21 = new GridBagConstraints();
		labelGbc_21.insets = new Insets(5, 5, 5, 5);
		labelGbc_21.gridx = 0;
		labelGbc_21.gridy = 21;
		add(heightLabel, labelGbc_21);

		heightJSlider = new JSlider();
		GridBagConstraints componentGbc_21 = new GridBagConstraints();
		componentGbc_21.insets = new Insets(5, 0, 5, 5);
		componentGbc_21.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_21.gridx = 1;
		componentGbc_21.gridy = 21;
		add(heightJSlider, componentGbc_21);

		JLabel inheritsPopupMenuLabel = new JLabel("InheritsPopupMenu:");
		GridBagConstraints labelGbc_22 = new GridBagConstraints();
		labelGbc_22.insets = new Insets(5, 5, 5, 5);
		labelGbc_22.gridx = 0;
		labelGbc_22.gridy = 22;
		add(inheritsPopupMenuLabel, labelGbc_22);

		inheritsPopupMenuJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_22 = new GridBagConstraints();
		componentGbc_22.insets = new Insets(5, 0, 5, 5);
		componentGbc_22.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_22.gridx = 1;
		componentGbc_22.gridy = 22;
		add(inheritsPopupMenuJCheckBox, componentGbc_22);

		JLabel managingFocusLabel = new JLabel("ManagingFocus:");
		GridBagConstraints labelGbc_23 = new GridBagConstraints();
		labelGbc_23.insets = new Insets(5, 5, 5, 5);
		labelGbc_23.gridx = 0;
		labelGbc_23.gridy = 23;
		add(managingFocusLabel, labelGbc_23);

		managingFocusJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_23 = new GridBagConstraints();
		componentGbc_23.insets = new Insets(5, 0, 5, 5);
		componentGbc_23.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_23.gridx = 1;
		componentGbc_23.gridy = 23;
		add(managingFocusJCheckBox, componentGbc_23);

		JLabel nameLabel = new JLabel("Name:");
		GridBagConstraints labelGbc_24 = new GridBagConstraints();
		labelGbc_24.insets = new Insets(5, 5, 5, 5);
		labelGbc_24.gridx = 0;
		labelGbc_24.gridy = 24;
		add(nameLabel, labelGbc_24);

		nameJTextField = new JTextField();
		GridBagConstraints componentGbc_24 = new GridBagConstraints();
		componentGbc_24.insets = new Insets(5, 0, 5, 5);
		componentGbc_24.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_24.gridx = 1;
		componentGbc_24.gridy = 24;
		add(nameJTextField, componentGbc_24);

		JLabel opaqueLabel = new JLabel("Opaque:");
		GridBagConstraints labelGbc_25 = new GridBagConstraints();
		labelGbc_25.insets = new Insets(5, 5, 5, 5);
		labelGbc_25.gridx = 0;
		labelGbc_25.gridy = 25;
		add(opaqueLabel, labelGbc_25);

		opaqueJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_25 = new GridBagConstraints();
		componentGbc_25.insets = new Insets(5, 0, 5, 5);
		componentGbc_25.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_25.gridx = 1;
		componentGbc_25.gridy = 25;
		add(opaqueJCheckBox, componentGbc_25);

		JLabel optimizedDrawingEnabledLabel = new JLabel("OptimizedDrawingEnabled:");
		GridBagConstraints labelGbc_26 = new GridBagConstraints();
		labelGbc_26.insets = new Insets(5, 5, 5, 5);
		labelGbc_26.gridx = 0;
		labelGbc_26.gridy = 26;
		add(optimizedDrawingEnabledLabel, labelGbc_26);

		optimizedDrawingEnabledJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_26 = new GridBagConstraints();
		componentGbc_26.insets = new Insets(5, 0, 5, 5);
		componentGbc_26.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_26.gridx = 1;
		componentGbc_26.gridy = 26;
		add(optimizedDrawingEnabledJCheckBox, componentGbc_26);

		JLabel paintingForPrintLabel = new JLabel("PaintingForPrint:");
		GridBagConstraints labelGbc_27 = new GridBagConstraints();
		labelGbc_27.insets = new Insets(5, 5, 5, 5);
		labelGbc_27.gridx = 0;
		labelGbc_27.gridy = 27;
		add(paintingForPrintLabel, labelGbc_27);

		paintingForPrintJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_27 = new GridBagConstraints();
		componentGbc_27.insets = new Insets(5, 0, 5, 5);
		componentGbc_27.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_27.gridx = 1;
		componentGbc_27.gridy = 27;
		add(paintingForPrintJCheckBox, componentGbc_27);

		JLabel paintingTileLabel = new JLabel("PaintingTile:");
		GridBagConstraints labelGbc_28 = new GridBagConstraints();
		labelGbc_28.insets = new Insets(5, 5, 5, 5);
		labelGbc_28.gridx = 0;
		labelGbc_28.gridy = 28;
		add(paintingTileLabel, labelGbc_28);

		paintingTileJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_28 = new GridBagConstraints();
		componentGbc_28.insets = new Insets(5, 0, 5, 5);
		componentGbc_28.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_28.gridx = 1;
		componentGbc_28.gridy = 28;
		add(paintingTileJCheckBox, componentGbc_28);

		JLabel requestFocusEnabledLabel = new JLabel("RequestFocusEnabled:");
		GridBagConstraints labelGbc_29 = new GridBagConstraints();
		labelGbc_29.insets = new Insets(5, 5, 5, 5);
		labelGbc_29.gridx = 0;
		labelGbc_29.gridy = 29;
		add(requestFocusEnabledLabel, labelGbc_29);

		requestFocusEnabledJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_29 = new GridBagConstraints();
		componentGbc_29.insets = new Insets(5, 0, 5, 5);
		componentGbc_29.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_29.gridx = 1;
		componentGbc_29.gridy = 29;
		add(requestFocusEnabledJCheckBox, componentGbc_29);

		JLabel rowCountLabel = new JLabel("RowCount:");
		GridBagConstraints labelGbc_30 = new GridBagConstraints();
		labelGbc_30.insets = new Insets(5, 5, 5, 5);
		labelGbc_30.gridx = 0;
		labelGbc_30.gridy = 30;
		add(rowCountLabel, labelGbc_30);

		rowCountJSlider = new JSlider();
		GridBagConstraints componentGbc_30 = new GridBagConstraints();
		componentGbc_30.insets = new Insets(5, 0, 5, 5);
		componentGbc_30.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_30.gridx = 1;
		componentGbc_30.gridy = 30;
		add(rowCountJSlider, componentGbc_30);

		JLabel rowHeightLabel = new JLabel("RowHeight:");
		GridBagConstraints labelGbc_31 = new GridBagConstraints();
		labelGbc_31.insets = new Insets(5, 5, 5, 5);
		labelGbc_31.gridx = 0;
		labelGbc_31.gridy = 31;
		add(rowHeightLabel, labelGbc_31);

		rowHeightJSlider = new JSlider();
		GridBagConstraints componentGbc_31 = new GridBagConstraints();
		componentGbc_31.insets = new Insets(5, 0, 5, 5);
		componentGbc_31.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_31.gridx = 1;
		componentGbc_31.gridy = 31;
		add(rowHeightJSlider, componentGbc_31);

		JLabel rowMarginLabel = new JLabel("RowMargin:");
		GridBagConstraints labelGbc_32 = new GridBagConstraints();
		labelGbc_32.insets = new Insets(5, 5, 5, 5);
		labelGbc_32.gridx = 0;
		labelGbc_32.gridy = 32;
		add(rowMarginLabel, labelGbc_32);

		rowMarginJSlider = new JSlider();
		GridBagConstraints componentGbc_32 = new GridBagConstraints();
		componentGbc_32.insets = new Insets(5, 0, 5, 5);
		componentGbc_32.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_32.gridx = 1;
		componentGbc_32.gridy = 32;
		add(rowMarginJSlider, componentGbc_32);

		JLabel rowSelectionAllowedLabel = new JLabel("RowSelectionAllowed:");
		GridBagConstraints labelGbc_33 = new GridBagConstraints();
		labelGbc_33.insets = new Insets(5, 5, 5, 5);
		labelGbc_33.gridx = 0;
		labelGbc_33.gridy = 33;
		add(rowSelectionAllowedLabel, labelGbc_33);

		rowSelectionAllowedJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_33 = new GridBagConstraints();
		componentGbc_33.insets = new Insets(5, 0, 5, 5);
		componentGbc_33.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_33.gridx = 1;
		componentGbc_33.gridy = 33;
		add(rowSelectionAllowedJCheckBox, componentGbc_33);

		JLabel scrollableTracksViewportHeightLabel = new JLabel("ScrollableTracksViewportHeight:");
		GridBagConstraints labelGbc_34 = new GridBagConstraints();
		labelGbc_34.insets = new Insets(5, 5, 5, 5);
		labelGbc_34.gridx = 0;
		labelGbc_34.gridy = 34;
		add(scrollableTracksViewportHeightLabel, labelGbc_34);

		scrollableTracksViewportHeightJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_34 = new GridBagConstraints();
		componentGbc_34.insets = new Insets(5, 0, 5, 5);
		componentGbc_34.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_34.gridx = 1;
		componentGbc_34.gridy = 34;
		add(scrollableTracksViewportHeightJCheckBox, componentGbc_34);

		JLabel scrollableTracksViewportWidthLabel = new JLabel("ScrollableTracksViewportWidth:");
		GridBagConstraints labelGbc_35 = new GridBagConstraints();
		labelGbc_35.insets = new Insets(5, 5, 5, 5);
		labelGbc_35.gridx = 0;
		labelGbc_35.gridy = 35;
		add(scrollableTracksViewportWidthLabel, labelGbc_35);

		scrollableTracksViewportWidthJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_35 = new GridBagConstraints();
		componentGbc_35.insets = new Insets(5, 0, 5, 5);
		componentGbc_35.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_35.gridx = 1;
		componentGbc_35.gridy = 35;
		add(scrollableTracksViewportWidthJCheckBox, componentGbc_35);

		JLabel selectedColumnLabel = new JLabel("SelectedColumn:");
		GridBagConstraints labelGbc_36 = new GridBagConstraints();
		labelGbc_36.insets = new Insets(5, 5, 5, 5);
		labelGbc_36.gridx = 0;
		labelGbc_36.gridy = 36;
		add(selectedColumnLabel, labelGbc_36);

		selectedColumnJSlider = new JSlider();
		GridBagConstraints componentGbc_36 = new GridBagConstraints();
		componentGbc_36.insets = new Insets(5, 0, 5, 5);
		componentGbc_36.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_36.gridx = 1;
		componentGbc_36.gridy = 36;
		add(selectedColumnJSlider, componentGbc_36);

		JLabel selectedColumnCountLabel = new JLabel("SelectedColumnCount:");
		GridBagConstraints labelGbc_37 = new GridBagConstraints();
		labelGbc_37.insets = new Insets(5, 5, 5, 5);
		labelGbc_37.gridx = 0;
		labelGbc_37.gridy = 37;
		add(selectedColumnCountLabel, labelGbc_37);

		selectedColumnCountJSlider = new JSlider();
		GridBagConstraints componentGbc_37 = new GridBagConstraints();
		componentGbc_37.insets = new Insets(5, 0, 5, 5);
		componentGbc_37.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_37.gridx = 1;
		componentGbc_37.gridy = 37;
		add(selectedColumnCountJSlider, componentGbc_37);

		JLabel selectedRowLabel = new JLabel("SelectedRow:");
		GridBagConstraints labelGbc_38 = new GridBagConstraints();
		labelGbc_38.insets = new Insets(5, 5, 5, 5);
		labelGbc_38.gridx = 0;
		labelGbc_38.gridy = 38;
		add(selectedRowLabel, labelGbc_38);

		selectedRowJSlider = new JSlider();
		GridBagConstraints componentGbc_38 = new GridBagConstraints();
		componentGbc_38.insets = new Insets(5, 0, 5, 5);
		componentGbc_38.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_38.gridx = 1;
		componentGbc_38.gridy = 38;
		add(selectedRowJSlider, componentGbc_38);

		JLabel selectedRowCountLabel = new JLabel("SelectedRowCount:");
		GridBagConstraints labelGbc_39 = new GridBagConstraints();
		labelGbc_39.insets = new Insets(5, 5, 5, 5);
		labelGbc_39.gridx = 0;
		labelGbc_39.gridy = 39;
		add(selectedRowCountLabel, labelGbc_39);

		selectedRowCountJSlider = new JSlider();
		GridBagConstraints componentGbc_39 = new GridBagConstraints();
		componentGbc_39.insets = new Insets(5, 0, 5, 5);
		componentGbc_39.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_39.gridx = 1;
		componentGbc_39.gridy = 39;
		add(selectedRowCountJSlider, componentGbc_39);

		JLabel selectionModeLabel = new JLabel("SelectionMode:");
		GridBagConstraints labelGbc_40 = new GridBagConstraints();
		labelGbc_40.insets = new Insets(5, 5, 5, 5);
		labelGbc_40.gridx = 0;
		labelGbc_40.gridy = 40;
		add(selectionModeLabel, labelGbc_40);

		selectionModeJSlider = new JSlider();
		GridBagConstraints componentGbc_40 = new GridBagConstraints();
		componentGbc_40.insets = new Insets(5, 0, 5, 5);
		componentGbc_40.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_40.gridx = 1;
		componentGbc_40.gridy = 40;
		add(selectionModeJSlider, componentGbc_40);

		JLabel showGridLabel = new JLabel("ShowGrid:");
		GridBagConstraints labelGbc_41 = new GridBagConstraints();
		labelGbc_41.insets = new Insets(5, 5, 5, 5);
		labelGbc_41.gridx = 0;
		labelGbc_41.gridy = 41;
		add(showGridLabel, labelGbc_41);

		showGridJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_41 = new GridBagConstraints();
		componentGbc_41.insets = new Insets(5, 0, 5, 5);
		componentGbc_41.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_41.gridx = 1;
		componentGbc_41.gridy = 41;
		add(showGridJCheckBox, componentGbc_41);

		JLabel showHorizontalLinesLabel = new JLabel("ShowHorizontalLines:");
		GridBagConstraints labelGbc_42 = new GridBagConstraints();
		labelGbc_42.insets = new Insets(5, 5, 5, 5);
		labelGbc_42.gridx = 0;
		labelGbc_42.gridy = 42;
		add(showHorizontalLinesLabel, labelGbc_42);

		showHorizontalLinesJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_42 = new GridBagConstraints();
		componentGbc_42.insets = new Insets(5, 0, 5, 5);
		componentGbc_42.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_42.gridx = 1;
		componentGbc_42.gridy = 42;
		add(showHorizontalLinesJCheckBox, componentGbc_42);

		JLabel showVerticalLinesLabel = new JLabel("ShowVerticalLines:");
		GridBagConstraints labelGbc_43 = new GridBagConstraints();
		labelGbc_43.insets = new Insets(5, 5, 5, 5);
		labelGbc_43.gridx = 0;
		labelGbc_43.gridy = 43;
		add(showVerticalLinesLabel, labelGbc_43);

		showVerticalLinesJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_43 = new GridBagConstraints();
		componentGbc_43.insets = new Insets(5, 0, 5, 5);
		componentGbc_43.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_43.gridx = 1;
		componentGbc_43.gridy = 43;
		add(showVerticalLinesJCheckBox, componentGbc_43);

		JLabel surrendersFocusOnKeystrokeLabel = new JLabel("SurrendersFocusOnKeystroke:");
		GridBagConstraints labelGbc_44 = new GridBagConstraints();
		labelGbc_44.insets = new Insets(5, 5, 5, 5);
		labelGbc_44.gridx = 0;
		labelGbc_44.gridy = 44;
		add(surrendersFocusOnKeystrokeLabel, labelGbc_44);

		surrendersFocusOnKeystrokeJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_44 = new GridBagConstraints();
		componentGbc_44.insets = new Insets(5, 0, 5, 5);
		componentGbc_44.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_44.gridx = 1;
		componentGbc_44.gridy = 44;
		add(surrendersFocusOnKeystrokeJCheckBox, componentGbc_44);

		JLabel toolTipTextLabel = new JLabel("ToolTipText:");
		GridBagConstraints labelGbc_45 = new GridBagConstraints();
		labelGbc_45.insets = new Insets(5, 5, 5, 5);
		labelGbc_45.gridx = 0;
		labelGbc_45.gridy = 45;
		add(toolTipTextLabel, labelGbc_45);

		toolTipTextJTextField = new JTextField();
		GridBagConstraints componentGbc_45 = new GridBagConstraints();
		componentGbc_45.insets = new Insets(5, 0, 5, 5);
		componentGbc_45.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_45.gridx = 1;
		componentGbc_45.gridy = 45;
		add(toolTipTextJTextField, componentGbc_45);

		JLabel updateSelectionOnSortLabel = new JLabel("UpdateSelectionOnSort:");
		GridBagConstraints labelGbc_46 = new GridBagConstraints();
		labelGbc_46.insets = new Insets(5, 5, 5, 5);
		labelGbc_46.gridx = 0;
		labelGbc_46.gridy = 46;
		add(updateSelectionOnSortLabel, labelGbc_46);

		updateSelectionOnSortJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_46 = new GridBagConstraints();
		componentGbc_46.insets = new Insets(5, 0, 5, 5);
		componentGbc_46.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_46.gridx = 1;
		componentGbc_46.gridy = 46;
		add(updateSelectionOnSortJCheckBox, componentGbc_46);

		JLabel validateRootLabel = new JLabel("ValidateRoot:");
		GridBagConstraints labelGbc_47 = new GridBagConstraints();
		labelGbc_47.insets = new Insets(5, 5, 5, 5);
		labelGbc_47.gridx = 0;
		labelGbc_47.gridy = 47;
		add(validateRootLabel, labelGbc_47);

		validateRootJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_47 = new GridBagConstraints();
		componentGbc_47.insets = new Insets(5, 0, 5, 5);
		componentGbc_47.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_47.gridx = 1;
		componentGbc_47.gridy = 47;
		add(validateRootJCheckBox, componentGbc_47);

		JLabel verifyInputWhenFocusTargetLabel = new JLabel("VerifyInputWhenFocusTarget:");
		GridBagConstraints labelGbc_48 = new GridBagConstraints();
		labelGbc_48.insets = new Insets(5, 5, 5, 5);
		labelGbc_48.gridx = 0;
		labelGbc_48.gridy = 48;
		add(verifyInputWhenFocusTargetLabel, labelGbc_48);

		verifyInputWhenFocusTargetJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_48 = new GridBagConstraints();
		componentGbc_48.insets = new Insets(5, 0, 5, 5);
		componentGbc_48.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_48.gridx = 1;
		componentGbc_48.gridy = 48;
		add(verifyInputWhenFocusTargetJCheckBox, componentGbc_48);

		JLabel visibleLabel = new JLabel("Visible:");
		GridBagConstraints labelGbc_49 = new GridBagConstraints();
		labelGbc_49.insets = new Insets(5, 5, 5, 5);
		labelGbc_49.gridx = 0;
		labelGbc_49.gridy = 49;
		add(visibleLabel, labelGbc_49);

		visibleJCheckBox = new JCheckBox();
		GridBagConstraints componentGbc_49 = new GridBagConstraints();
		componentGbc_49.insets = new Insets(5, 0, 5, 5);
		componentGbc_49.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_49.gridx = 1;
		componentGbc_49.gridy = 49;
		add(visibleJCheckBox, componentGbc_49);

		JLabel widthLabel = new JLabel("Width:");
		GridBagConstraints labelGbc_50 = new GridBagConstraints();
		labelGbc_50.insets = new Insets(5, 5, 5, 5);
		labelGbc_50.gridx = 0;
		labelGbc_50.gridy = 50;
		add(widthLabel, labelGbc_50);

		widthJSlider = new JSlider();
		GridBagConstraints componentGbc_50 = new GridBagConstraints();
		componentGbc_50.insets = new Insets(5, 0, 5, 5);
		componentGbc_50.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_50.gridx = 1;
		componentGbc_50.gridy = 50;
		add(widthJSlider, componentGbc_50);

		JLabel xLabel = new JLabel("X:");
		GridBagConstraints labelGbc_51 = new GridBagConstraints();
		labelGbc_51.insets = new Insets(5, 5, 5, 5);
		labelGbc_51.gridx = 0;
		labelGbc_51.gridy = 51;
		add(xLabel, labelGbc_51);

		xJSlider = new JSlider();
		GridBagConstraints componentGbc_51 = new GridBagConstraints();
		componentGbc_51.insets = new Insets(5, 0, 5, 5);
		componentGbc_51.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_51.gridx = 1;
		componentGbc_51.gridy = 51;
		add(xJSlider, componentGbc_51);

		JLabel yLabel = new JLabel("Y:");
		GridBagConstraints labelGbc_52 = new GridBagConstraints();
		labelGbc_52.insets = new Insets(5, 5, 5, 5);
		labelGbc_52.gridx = 0;
		labelGbc_52.gridy = 52;
		add(yLabel, labelGbc_52);

		yJSlider = new JSlider();
		GridBagConstraints componentGbc_52 = new GridBagConstraints();
		componentGbc_52.insets = new Insets(5, 0, 5, 5);
		componentGbc_52.fill = GridBagConstraints.HORIZONTAL;
		componentGbc_52.gridx = 1;
		componentGbc_52.gridy = 52;
		add(yJSlider, componentGbc_52);

		if (jTable != null) {
			m_bindingGroup = initDataBindings();
		}
	}

	protected BindingGroup initDataBindings() {
		BeanProperty<javax.swing.JTable, java.lang.String> uIClassIDProperty = BeanProperty.create("UIClassID");
		BeanProperty<javax.swing.JTextField, java.lang.String> textProperty = BeanProperty.create("text");
		AutoBinding<javax.swing.JTable, java.lang.String, javax.swing.JTextField, java.lang.String> autoBinding = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, uIClassIDProperty, UIClassIDJTextField,
						textProperty);
		autoBinding.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> autoCreateColumnsFromModelProperty = BeanProperty
				.create("autoCreateColumnsFromModel");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_1 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, jTable, autoCreateColumnsFromModelProperty,
						autoCreateColumnsFromModelJCheckBox, selectedProperty);
		autoBinding_1.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> autoCreateRowSorterProperty = BeanProperty
				.create("autoCreateRowSorter");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_1 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_2 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, autoCreateRowSorterProperty,
						autoCreateRowSorterJCheckBox, selectedProperty_1);
		autoBinding_2.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> autoResizeModeProperty = BeanProperty
				.create("autoResizeMode");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_3 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, autoResizeModeProperty,
						autoResizeModeJSlider, valueProperty);
		autoBinding_3.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> autoscrollsProperty = BeanProperty.create("autoscrolls");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_2 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_4 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, autoscrollsProperty, autoscrollsJCheckBox,
						selectedProperty_2);
		autoBinding_4.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> cellSelectionEnabledProperty = BeanProperty
				.create("cellSelectionEnabled");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_3 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_5 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, cellSelectionEnabledProperty,
						cellSelectionEnabledJCheckBox, selectedProperty_3);
		autoBinding_5.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> columnCountProperty = BeanProperty.create("columnCount");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_1 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_6 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, columnCountProperty, columnCountJSlider,
						valueProperty_1);
		autoBinding_6.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> columnSelectionAllowedProperty = BeanProperty
				.create("columnSelectionAllowed");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_4 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_7 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, columnSelectionAllowedProperty,
						columnSelectionAllowedJCheckBox, selectedProperty_4);
		autoBinding_7.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> componentCountProperty = BeanProperty
				.create("componentCount");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_2 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_8 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, componentCountProperty,
						componentCountJSlider, valueProperty_2);
		autoBinding_8.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> debugGraphicsOptionsProperty = BeanProperty
				.create("debugGraphicsOptions");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_3 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_9 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, debugGraphicsOptionsProperty,
						debugGraphicsOptionsJSlider, valueProperty_3);
		autoBinding_9.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> doubleBufferedProperty = BeanProperty
				.create("doubleBuffered");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_5 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_10 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, doubleBufferedProperty,
						doubleBufferedJCheckBox, selectedProperty_5);
		autoBinding_10.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> dragEnabledProperty = BeanProperty.create("dragEnabled");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_6 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_11 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, dragEnabledProperty, dragEnabledJCheckBox,
						selectedProperty_6);
		autoBinding_11.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> editingProperty = BeanProperty.create("editing");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_7 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_12 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, editingProperty, editingJCheckBox,
						selectedProperty_7);
		autoBinding_12.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> editingColumnProperty = BeanProperty
				.create("editingColumn");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_4 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_13 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, editingColumnProperty, editingColumnJSlider,
						valueProperty_4);
		autoBinding_13.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> editingRowProperty = BeanProperty.create("editingRow");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_5 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_14 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, editingRowProperty, editingRowJSlider,
						valueProperty_5);
		autoBinding_14.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> enabledProperty = BeanProperty.create("enabled");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_8 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_15 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, enabledProperty, enabledJCheckBox,
						selectedProperty_8);
		autoBinding_15.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> fillsViewportHeightProperty = BeanProperty
				.create("fillsViewportHeight");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_9 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_16 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, fillsViewportHeightProperty,
						fillsViewportHeightJCheckBox, selectedProperty_9);
		autoBinding_16.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> focusCycleRootProperty = BeanProperty
				.create("focusCycleRoot");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_10 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_17 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, focusCycleRootProperty,
						focusCycleRootJCheckBox, selectedProperty_10);
		autoBinding_17.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> focusTraversalPolicyProviderProperty = BeanProperty
				.create("focusTraversalPolicyProvider");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_11 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_18 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, focusTraversalPolicyProviderProperty,
						focusTraversalPolicyProviderJCheckBox, selectedProperty_11);
		autoBinding_18.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> focusTraversalPolicySetProperty = BeanProperty
				.create("focusTraversalPolicySet");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_12 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_19 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, focusTraversalPolicySetProperty,
						focusTraversalPolicySetJCheckBox, selectedProperty_12);
		autoBinding_19.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> focusableProperty = BeanProperty.create("focusable");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_13 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_20 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, focusableProperty, focusableJCheckBox,
						selectedProperty_13);
		autoBinding_20.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> heightProperty = BeanProperty.create("height");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_6 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_21 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, heightProperty, heightJSlider,
						valueProperty_6);
		autoBinding_21.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> inheritsPopupMenuProperty = BeanProperty
				.create("inheritsPopupMenu");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_14 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_22 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, inheritsPopupMenuProperty,
						inheritsPopupMenuJCheckBox, selectedProperty_14);
		autoBinding_22.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> managingFocusProperty = BeanProperty
				.create("managingFocus");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_15 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_23 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, managingFocusProperty,
						managingFocusJCheckBox, selectedProperty_15);
		autoBinding_23.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.String> nameProperty = BeanProperty.create("name");
		BeanProperty<javax.swing.JTextField, java.lang.String> textProperty_1 = BeanProperty.create("text");
		AutoBinding<javax.swing.JTable, java.lang.String, javax.swing.JTextField, java.lang.String> autoBinding_24 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, nameProperty, nameJTextField,
						textProperty_1);
		autoBinding_24.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> opaqueProperty = BeanProperty.create("opaque");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_16 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_25 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, opaqueProperty, opaqueJCheckBox,
						selectedProperty_16);
		autoBinding_25.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> optimizedDrawingEnabledProperty = BeanProperty
				.create("optimizedDrawingEnabled");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_17 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_26 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, optimizedDrawingEnabledProperty,
						optimizedDrawingEnabledJCheckBox, selectedProperty_17);
		autoBinding_26.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> paintingForPrintProperty = BeanProperty
				.create("paintingForPrint");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_18 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_27 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, paintingForPrintProperty,
						paintingForPrintJCheckBox, selectedProperty_18);
		autoBinding_27.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> paintingTileProperty = BeanProperty.create("paintingTile");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_19 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_28 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, paintingTileProperty, paintingTileJCheckBox,
						selectedProperty_19);
		autoBinding_28.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> requestFocusEnabledProperty = BeanProperty
				.create("requestFocusEnabled");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_20 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_29 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, requestFocusEnabledProperty,
						requestFocusEnabledJCheckBox, selectedProperty_20);
		autoBinding_29.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> rowCountProperty = BeanProperty.create("rowCount");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_7 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_30 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, rowCountProperty, rowCountJSlider,
						valueProperty_7);
		autoBinding_30.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> rowHeightProperty = BeanProperty.create("rowHeight");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_8 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_31 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, rowHeightProperty, rowHeightJSlider,
						valueProperty_8);
		autoBinding_31.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> rowMarginProperty = BeanProperty.create("rowMargin");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_9 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_32 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, rowMarginProperty, rowMarginJSlider,
						valueProperty_9);
		autoBinding_32.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> rowSelectionAllowedProperty = BeanProperty
				.create("rowSelectionAllowed");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_21 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_33 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, rowSelectionAllowedProperty,
						rowSelectionAllowedJCheckBox, selectedProperty_21);
		autoBinding_33.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> scrollableTracksViewportHeightProperty = BeanProperty
				.create("scrollableTracksViewportHeight");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_22 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_34 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, scrollableTracksViewportHeightProperty,
						scrollableTracksViewportHeightJCheckBox, selectedProperty_22);
		autoBinding_34.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> scrollableTracksViewportWidthProperty = BeanProperty
				.create("scrollableTracksViewportWidth");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_23 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_35 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, scrollableTracksViewportWidthProperty,
						scrollableTracksViewportWidthJCheckBox, selectedProperty_23);
		autoBinding_35.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> selectedColumnProperty = BeanProperty
				.create("selectedColumn");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_10 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_36 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, selectedColumnProperty,
						selectedColumnJSlider, valueProperty_10);
		autoBinding_36.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> selectedColumnCountProperty = BeanProperty
				.create("selectedColumnCount");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_11 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_37 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, selectedColumnCountProperty,
						selectedColumnCountJSlider, valueProperty_11);
		autoBinding_37.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> selectedRowProperty = BeanProperty.create("selectedRow");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_12 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_38 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, selectedRowProperty, selectedRowJSlider,
						valueProperty_12);
		autoBinding_38.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> selectedRowCountProperty = BeanProperty
				.create("selectedRowCount");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_13 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_39 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, selectedRowCountProperty,
						selectedRowCountJSlider, valueProperty_13);
		autoBinding_39.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> selectionModeProperty = BeanProperty
				.create("selectionMode");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_14 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_40 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, selectionModeProperty, selectionModeJSlider,
						valueProperty_14);
		autoBinding_40.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> showGridProperty = BeanProperty.create("showGrid");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_24 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_41 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, showGridProperty, showGridJCheckBox,
						selectedProperty_24);
		autoBinding_41.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> showHorizontalLinesProperty = BeanProperty
				.create("showHorizontalLines");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_25 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_42 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, showHorizontalLinesProperty,
						showHorizontalLinesJCheckBox, selectedProperty_25);
		autoBinding_42.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> showVerticalLinesProperty = BeanProperty
				.create("showVerticalLines");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_26 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_43 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, showVerticalLinesProperty,
						showVerticalLinesJCheckBox, selectedProperty_26);
		autoBinding_43.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> surrendersFocusOnKeystrokeProperty = BeanProperty
				.create("surrendersFocusOnKeystroke");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_27 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_44 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, surrendersFocusOnKeystrokeProperty,
						surrendersFocusOnKeystrokeJCheckBox, selectedProperty_27);
		autoBinding_44.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.String> toolTipTextProperty = BeanProperty.create("toolTipText");
		BeanProperty<javax.swing.JTextField, java.lang.String> textProperty_2 = BeanProperty.create("text");
		AutoBinding<javax.swing.JTable, java.lang.String, javax.swing.JTextField, java.lang.String> autoBinding_45 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, toolTipTextProperty, toolTipTextJTextField,
						textProperty_2);
		autoBinding_45.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> updateSelectionOnSortProperty = BeanProperty
				.create("updateSelectionOnSort");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_28 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_46 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, updateSelectionOnSortProperty,
						updateSelectionOnSortJCheckBox, selectedProperty_28);
		autoBinding_46.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> validateRootProperty = BeanProperty.create("validateRoot");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_29 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_47 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, validateRootProperty, validateRootJCheckBox,
						selectedProperty_29);
		autoBinding_47.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> verifyInputWhenFocusTargetProperty = BeanProperty
				.create("verifyInputWhenFocusTarget");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_30 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_48 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, verifyInputWhenFocusTargetProperty,
						verifyInputWhenFocusTargetJCheckBox, selectedProperty_30);
		autoBinding_48.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Boolean> visibleProperty = BeanProperty.create("visible");
		BeanProperty<javax.swing.JCheckBox, java.lang.Boolean> selectedProperty_31 = BeanProperty.create("selected");
		AutoBinding<javax.swing.JTable, java.lang.Boolean, javax.swing.JCheckBox, java.lang.Boolean> autoBinding_49 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, visibleProperty, visibleJCheckBox,
						selectedProperty_31);
		autoBinding_49.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> widthProperty = BeanProperty.create("width");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_15 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_50 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, widthProperty, widthJSlider,
						valueProperty_15);
		autoBinding_50.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> xProperty = BeanProperty.create("x");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_16 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_51 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, xProperty, xJSlider, valueProperty_16);
		autoBinding_51.bind();
		//
		BeanProperty<javax.swing.JTable, java.lang.Integer> yProperty = BeanProperty.create("y");
		BeanProperty<javax.swing.JSlider, java.lang.Integer> valueProperty_17 = BeanProperty.create("value");
		AutoBinding<javax.swing.JTable, java.lang.Integer, javax.swing.JSlider, java.lang.Integer> autoBinding_52 = Bindings
				.createAutoBinding(AutoBinding.UpdateStrategy.READ, jTable, yProperty, yJSlider, valueProperty_17);
		autoBinding_52.bind();
		//
		BindingGroup bindingGroup = new BindingGroup();
		bindingGroup.addBinding(autoBinding);
		bindingGroup.addBinding(autoBinding_1);
		bindingGroup.addBinding(autoBinding_2);
		bindingGroup.addBinding(autoBinding_3);
		bindingGroup.addBinding(autoBinding_4);
		bindingGroup.addBinding(autoBinding_5);
		bindingGroup.addBinding(autoBinding_6);
		bindingGroup.addBinding(autoBinding_7);
		bindingGroup.addBinding(autoBinding_8);
		bindingGroup.addBinding(autoBinding_9);
		bindingGroup.addBinding(autoBinding_10);
		bindingGroup.addBinding(autoBinding_11);
		bindingGroup.addBinding(autoBinding_12);
		bindingGroup.addBinding(autoBinding_13);
		bindingGroup.addBinding(autoBinding_14);
		bindingGroup.addBinding(autoBinding_15);
		bindingGroup.addBinding(autoBinding_16);
		bindingGroup.addBinding(autoBinding_17);
		bindingGroup.addBinding(autoBinding_18);
		bindingGroup.addBinding(autoBinding_19);
		bindingGroup.addBinding(autoBinding_20);
		bindingGroup.addBinding(autoBinding_21);
		bindingGroup.addBinding(autoBinding_22);
		bindingGroup.addBinding(autoBinding_23);
		bindingGroup.addBinding(autoBinding_24);
		bindingGroup.addBinding(autoBinding_25);
		bindingGroup.addBinding(autoBinding_26);
		bindingGroup.addBinding(autoBinding_27);
		bindingGroup.addBinding(autoBinding_28);
		bindingGroup.addBinding(autoBinding_29);
		bindingGroup.addBinding(autoBinding_30);
		bindingGroup.addBinding(autoBinding_31);
		bindingGroup.addBinding(autoBinding_32);
		bindingGroup.addBinding(autoBinding_33);
		bindingGroup.addBinding(autoBinding_34);
		bindingGroup.addBinding(autoBinding_35);
		bindingGroup.addBinding(autoBinding_36);
		bindingGroup.addBinding(autoBinding_37);
		bindingGroup.addBinding(autoBinding_38);
		bindingGroup.addBinding(autoBinding_39);
		bindingGroup.addBinding(autoBinding_40);
		bindingGroup.addBinding(autoBinding_41);
		bindingGroup.addBinding(autoBinding_42);
		bindingGroup.addBinding(autoBinding_43);
		bindingGroup.addBinding(autoBinding_44);
		bindingGroup.addBinding(autoBinding_45);
		bindingGroup.addBinding(autoBinding_46);
		bindingGroup.addBinding(autoBinding_47);
		bindingGroup.addBinding(autoBinding_48);
		bindingGroup.addBinding(autoBinding_49);
		bindingGroup.addBinding(autoBinding_50);
		bindingGroup.addBinding(autoBinding_51);
		bindingGroup.addBinding(autoBinding_52);
		//
		return bindingGroup;
	}

	public javax.swing.JTable getJTable() {
		return jTable;
	}

	public void setJTable(javax.swing.JTable newJTable) {
		setJTable(newJTable, true);
	}

	public void setJTable(javax.swing.JTable newJTable, boolean update) {
		jTable = newJTable;
		if (update) {
			if (m_bindingGroup != null) {
				m_bindingGroup.unbind();
				m_bindingGroup = null;
			}
			if (jTable != null) {
				m_bindingGroup = initDataBindings();
			}
		}
	}

}
